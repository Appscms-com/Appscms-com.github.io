{"h1":"Android new libraries for developers libraries","title":"List of all Android new libraries for developers libraries for use in your project","meta":"See collection of all Android new libraries for developers libraries, filter by license, modified date, languages, and select best for your usecase.","repoList":[{"name":"Evolve","language":"Java","description":"Evolve is a library for Android Developers that lets them deploy new versions of an app without going through Google Play or asking users to download an update.","fullName":"VivekPanyam\/Evolve","updatedAt":"2020-07-07T07:08:26Z","gitUrl":"https:\/\/github.com\/VivekPanyam\/Evolve","license":"GNU Affero General Public License v3.0","forks":11,"stargazersCount":96},{"name":"ArchitecturedMovies","language":"Java","description":"Sample for new Architecture Components from Google https:\/\/developer.android.com\/topic\/libraries\/architecture\/index.html","fullName":"ArturVasilov\/ArchitecturedMovies","updatedAt":"2020-07-21T08:19:30Z","gitUrl":"https:\/\/github.com\/ArturVasilov\/ArchitecturedMovies","license":null,"forks":4,"stargazersCount":19},{"name":"Retrofit-Kotlin-tutorial","language":"Kotlin","description":"Hi Android Kotlin developers , this is the simple Kotlin app for Retrofit  HTTP library . Retrofit use  to make a HTTP calls . I am new in Kotlin so any changes or some thing went to the wrong then please give me  a note. In this project i also covered recycler list view internet connection check and other stuff.  thank you https:\/\/www.themoviedb.org\/documentation\/api,  www.androidhive.info.","fullName":"mekotlin\/Retrofit-Kotlin-tutorial","updatedAt":"2020-10-19T05:26:37Z","gitUrl":"https:\/\/github.com\/mekotlin\/Retrofit-Kotlin-tutorial","license":null,"forks":5,"stargazersCount":11},{"name":"Android-Bottom-Navigation-Bar","language":"Java","description":"Its been a while since Google introduced Material Design, but recently with Design Support Library v25 they released a new widget to make an Android Bottom Navigation Bar, as described in the official material design specs. This new navigation component is called the BottomNavigationView and as mentioned, its packaged under the design support library, having full backward support. Although if you browse the internet, you may find many examples, showing how to implement an Android bottom navigation bar. But this new Android BottomNavigationView widget makes it very easy for the developers to build and deploy apps with bottom navigation, as its an official component.","fullName":"skbhati199\/Android-Bottom-Navigation-Bar","updatedAt":"2017-01-31T11:23:37Z","gitUrl":"https:\/\/github.com\/skbhati199\/Android-Bottom-Navigation-Bar","license":"Apache License 2.0","forks":1,"stargazersCount":0},{"name":"Motion-layout-Sample","language":"Kotlin","description":"Sample code for the newly Added Motion layout for the android project.  MotionLayout is the new layout in Android, for creating amazing interactive animations in android. It\u2019s a part of ConstraintLayout 2.0 library to help Android Developers manage motion and widget animation in their applications.","fullName":"Naveen11695\/Motion-layout-Sample","updatedAt":"2020-11-06T15:52:39Z","gitUrl":"https:\/\/github.com\/Naveen11695\/Motion-layout-Sample","license":null,"forks":0,"stargazersCount":0},{"name":"Mew","language":"Java","description":"Mew is an open-source Mobile Crowdsensing framework aimed at facilitating MCS application development. Mew is currently available for Android platform (API 16 and above) and implemented as a distributed platform with two components - a server and an Android library. The server component is developed as an Eclipse project (Java v. 1.8) and offers a plug-n-play environment to developers to implement new task allocation algorithms as per their requirements.","fullName":"GarvitaBajaj\/Mew","updatedAt":"2019-11-22T20:25:32Z","gitUrl":"https:\/\/github.com\/GarvitaBajaj\/Mew","license":null,"forks":0,"stargazersCount":2},{"name":"Developing_Android_Apps_Kotlin","language":"Kotlin","description":"Learn to architect and develop Android apps in the Kotlin programming language using industry-proven tools and libraries. With these techniques you'll create apps in less time, writing less code, and with fewer errors.  This course was developed by Google together with Udacity. The course gives you hands on experience as you build real Android apps using industry best practices, with modern app architecture. You'll learn to use Android Jetpack components such as Room for databases, Work Manager for background processing, the new Navigation component, and more. You'll use key Kotlin features to write your app code more quickly and concisely.  Learning to develop on Android is much more than learning APIs and shortcuts. It's training your brain to think like a mobile developer.","fullName":"Ahmedsafwat101\/Developing_Android_Apps_Kotlin","updatedAt":"2020-09-05T21:28:24Z","gitUrl":"https:\/\/github.com\/Ahmedsafwat101\/Developing_Android_Apps_Kotlin","license":"MIT License","forks":0,"stargazersCount":0},{"name":"finalProject","language":"Java","description":"1. Generally, StudentMarks is a mobile application that created for lecturer to easily update their students marks and other details. This application was developed using android studio and SQLite as the database to store the data key in by the lectures.  2. This application have several functionality like ADD, DELETE, MODIFY, VIEW  and VIEW ALL or list.  - ADD  First, lecturer can use add function to add the student's data.   -DELETE If there is any unused data in database, user can delete it by enter the metric number and choose delete button.  -MODIFY  As the data was added incorrectly, the user can modify and update the new data that originally stored in that database.  -VIEW  In order to search any details of certain student, user can use the this function as they need to enter the metric number and touch the view button, the student name and marks will be automated viewed on the screen.  -VIEW ALL User can list out all the student's data that already stored in database.  3. Setup the development environment  Firstly, this StudentMark Application were build using Android Studio with the SDK Platform Android 8.1 (Oreo) with the API level 27, the SDK developer tools involved are Android SDK Build-Tools -rc2, Android Emulator version 27.1.10, Android SDK Platform -Tools, Android SDK Tools, Intel x86 Emulator Accelerator and Support Repository which contain Constraint Layout for Android, Solve for ConstraintLayout, Android Support Repository and Google Repository.  For the require library involved are :- apache-httpcomponents-httclient.jar , apache-httpcomponents-httpcore.jar , commons-logging-1.2.jar java-json.jar ","fullName":"Nurtiq\/finalProject","updatedAt":"2020-08-06T09:25:11Z","gitUrl":"https:\/\/github.com\/Nurtiq\/finalProject","license":null,"forks":1,"stargazersCount":2}]}