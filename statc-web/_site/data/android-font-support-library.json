{"h1":"Android font support  libraries","title":"List of all Android font support  libraries for use in your project","meta":"See collection of all Android font support  libraries, filter by license, modified date, languages, and select best for your usecase.","repoList":[{"name":"android-fonts-xml-sample","language":"Java","description":"Sample for the new fonts in XML using the support library 26","fullName":"segunfamisa\/android-fonts-xml-sample","updatedAt":"2020-01-28T07:31:53Z","gitUrl":"https:\/\/github.com\/segunfamisa\/android-fonts-xml-sample","license":null,"forks":6,"stargazersCount":23},{"name":"typography","language":"Java","description":"**DEPRECATED**. Use the native and support library variants instead - https:\/\/developer.android.com\/guide\/topics\/ui\/look-and-feel\/fonts-in-xml.html. An android library that makes it easy to add custom fonts to edittexts and textviews","fullName":"workarounds\/typography","updatedAt":"2020-05-31T18:30:33Z","gitUrl":"https:\/\/github.com\/workarounds\/typography","license":null,"forks":4,"stargazersCount":41},{"name":"Custom-fonts-supportLib-26","language":"Java","description":"custom fonts with support library 26 tutorial","fullName":"MohamedISoliman\/Custom-fonts-supportLib-26","updatedAt":"2017-10-24T09:40:49Z","gitUrl":"https:\/\/github.com\/MohamedISoliman\/Custom-fonts-supportLib-26","license":null,"forks":0,"stargazersCount":1},{"name":"BanglaSupportingLibrary","language":"Java","description":"This library will help to show bangla font in all android version. It is a library project","fullName":"souravpalitrana\/BanglaSupportingLibrary","updatedAt":"2014-09-16T17:45:41Z","gitUrl":"https:\/\/github.com\/souravpalitrana\/BanglaSupportingLibrary","license":null,"forks":0,"stargazersCount":0},{"name":"FontsSample","language":"Kotlin","description":"Sample application showcasing usage of fonts with Android Support Library","fullName":"AkshayChordiya\/FontsSample","updatedAt":"2020-03-03T21:03:10Z","gitUrl":"https:\/\/github.com\/AkshayChordiya\/FontsSample","license":null,"forks":0,"stargazersCount":1},{"name":"fontxml","language":"Java","description":"Testando a troca de font no android com os recursos da support library","fullName":"tramalho\/fontxml","updatedAt":"2018-01-25T13:41:30Z","gitUrl":"https:\/\/github.com\/tramalho\/fontxml","license":null,"forks":0,"stargazersCount":0},{"name":"Font","language":"Java","description":"Android 8.0 (API level 26) introduces a new feature, Fonts in XML, which lets you use fonts as resources. This means, there is no need to bundle fonts as assets. Fonts are compiled in R file and are automatically available in the system as a resource. You can then access these fonts with the help of a new resource type, font.  The Support Library 26 provides full support to this feature on devices running API versions 14 and higher.","fullName":"mukesh4u\/Font","updatedAt":"2017-10-26T11:03:10Z","gitUrl":"https:\/\/github.com\/mukesh4u\/Font","license":null,"forks":0,"stargazersCount":0},{"name":"Custom-Fonts-as-Resources-in-Android-Studio","language":"Java","description":"In this tutorial, we will learn how to add custom fonts as resources into our Android Studio project. Unlike downloadable fonts, these local fonts are bundled with the APK and always available offline. We will also learn how we can bundle multiple fonts together into one font-family XML file, where we can specify a fontStyle and fontWeight for each font file, and let the system apply it to a TextView automatically in accordance to its textStyle (italic or bold). By adding the fontFamily attribute to the AppTheme instead of a single TextView, we can apply a font application-wide, and by using it on a Toolbar theme, we can change the font of the Toolbar specifically. We can also change the font of a TextView dynamically in Java code, by creating a Typeface object with getResources().getFont() or the ResourcesCompat compatibility version, and applying this Typeface to a TextView with setTypeface. Custom fonts are backward compatible down to API level 16 over the AppCompat support library. On API 28 and higher, we can specify the font weight directly over the Typeface.create method or the textFontWeight XML attribute. Supported font resources are ttf and otf files. We can access the free Google Fonts library directly over the Android Studio Design Editor.","fullName":"sumon953\/Custom-Fonts-as-Resources-in-Android-Studio","updatedAt":"2020-07-02T07:20:55Z","gitUrl":"https:\/\/github.com\/sumon953\/Custom-Fonts-as-Resources-in-Android-Studio","license":null,"forks":1,"stargazersCount":1}]}